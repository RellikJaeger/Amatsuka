!function(window,document){"use strict";angular.module("toaster",[]).constant("toasterConfig",{limit:0,"tap-to-dismiss":!0,"close-button":!1,"close-html":'<button class="toast-close-button" type="button">&times;</button>',"newest-on-top":!0,"time-out":5e3,"icon-classes":{error:"toast-error",info:"toast-info",wait:"toast-wait",success:"toast-success",warning:"toast-warning"},"body-output-type":"","body-template":"toasterBodyTmpl.html","icon-class":"toast-info","position-class":"toast-top-right","title-class":"toast-title","message-class":"toast-message","prevent-duplicates":!1,"mouseover-timer-stop":!0}).service("toaster",["$rootScope","toasterConfig",function($rootScope,toasterConfig){function createTypeMethod(toasterType){return function(title,body,timeout,bodyOutputType,clickHandler,toasterId,showCloseButton,toastId,onHideCallback){angular.isString(title)?this.pop(toasterType,title,body,timeout,bodyOutputType,clickHandler,toasterId,showCloseButton,toastId,onHideCallback):this.pop(angular.extend(title,{type:toasterType}))}}this.pop=function(type,title,body,timeout,bodyOutputType,clickHandler,toasterId,showCloseButton,toastId,onHideCallback){if(angular.isObject(type)){var params=type;this.toast={type:params.type,title:params.title,body:params.body,timeout:params.timeout,bodyOutputType:params.bodyOutputType,clickHandler:params.clickHandler,showCloseButton:params.showCloseButton,closeHtml:params.closeHtml,uid:params.toastId,onHideCallback:params.onHideCallback,directiveData:params.directiveData},toastId=params.toastId,toasterId=params.toasterId}else this.toast={type:type,title:title,body:body,timeout:timeout,bodyOutputType:bodyOutputType,clickHandler:clickHandler,showCloseButton:showCloseButton,uid:toastId,onHideCallback:onHideCallback};$rootScope.$emit("toaster-newToast",toasterId,toastId)},this.clear=function(toasterId,toastId){$rootScope.$emit("toaster-clearToasts",toasterId,toastId)};for(var type in toasterConfig["icon-classes"])this[type]=createTypeMethod(type)}]).factory("toasterEventRegistry",["$rootScope",function($rootScope){var toasterFactory,deregisterNewToast=null,deregisterClearToasts=null,newToastEventSubscribers=[],clearToastsEventSubscribers=[];return toasterFactory={setup:function(){deregisterNewToast||(deregisterNewToast=$rootScope.$on("toaster-newToast",function(event,toasterId,toastId){for(var i=0,len=newToastEventSubscribers.length;i<len;i++)newToastEventSubscribers[i](event,toasterId,toastId)})),deregisterClearToasts||(deregisterClearToasts=$rootScope.$on("toaster-clearToasts",function(event,toasterId,toastId){for(var i=0,len=clearToastsEventSubscribers.length;i<len;i++)clearToastsEventSubscribers[i](event,toasterId,toastId)}))},subscribeToNewToastEvent:function(onNewToast){newToastEventSubscribers.push(onNewToast)},subscribeToClearToastsEvent:function(onClearToasts){clearToastsEventSubscribers.push(onClearToasts)},unsubscribeToNewToastEvent:function(onNewToast){var index=newToastEventSubscribers.indexOf(onNewToast);index>=0&&newToastEventSubscribers.splice(index,1),0===newToastEventSubscribers.length&&(deregisterNewToast(),deregisterNewToast=null)},unsubscribeToClearToastsEvent:function(onClearToasts){var index=clearToastsEventSubscribers.indexOf(onClearToasts);index>=0&&clearToastsEventSubscribers.splice(index,1),0===clearToastsEventSubscribers.length&&(deregisterClearToasts(),deregisterClearToasts=null)}},{setup:toasterFactory.setup,subscribeToNewToastEvent:toasterFactory.subscribeToNewToastEvent,subscribeToClearToastsEvent:toasterFactory.subscribeToClearToastsEvent,unsubscribeToNewToastEvent:toasterFactory.unsubscribeToNewToastEvent,unsubscribeToClearToastsEvent:toasterFactory.unsubscribeToClearToastsEvent}}]).directive("directiveTemplate",["$compile","$injector",function($compile,$injector){return{restrict:"A",scope:{directiveName:"@directiveName",directiveData:"@directiveData"},replace:!0,link:function(scope,elm,attrs){scope.$watch("directiveName",function(directiveName){if(angular.isUndefined(directiveName)||directiveName.length<=0)throw new Error("A valid directive name must be provided via the toast body argument when using bodyOutputType: directive");var directiveExists=$injector.has(attrs.$normalize(directiveName)+"Directive");if(!directiveExists)throw new Error(directiveName+" could not be found.");scope.directiveData&&(scope.directiveData=angular.fromJson(scope.directiveData));var template=$compile("<div "+directiveName+"></div>")(scope);elm.append(template)})}}}]).directive("toasterContainer",["$parse","$rootScope","$interval","$sce","toasterConfig","toaster","toasterEventRegistry",function($parse,$rootScope,$interval,$sce,toasterConfig,toaster,toasterEventRegistry){return{replace:!0,restrict:"EA",scope:!0,link:function(scope,elm,attrs){function setTimeout(toast,time){toast.timeoutPromise=$interval(function(){scope.removeToast(toast.id)},time,1)}function addToast(toast,toastId){if(toast.type=mergedConfig["icon-classes"][toast.type],toast.type||(toast.type=mergedConfig["icon-class"]),mergedConfig["prevent-duplicates"]===!0)if(isUndefinedOrNull(toastId)){if(scope.toasters.length>0&&scope.toasters[scope.toasters.length-1].body===toast.body)return}else{var i,len;for(i=0,len=scope.toasters.length;i<len;i++)scope.toasters[i].uid===toastId&&(removeToast(i),i--,len=scope.toasters.length)}toast.id=++id,isUndefinedOrNull(toastId)||(toast.uid=toastId);var closeButton=mergedConfig["close-button"];if("boolean"==typeof toast.showCloseButton);else if("boolean"==typeof closeButton)toast.showCloseButton=closeButton;else if("object"==typeof closeButton){var closeButtonForType=closeButton[toast.type];"undefined"!=typeof closeButtonForType&&null!==closeButtonForType&&(toast.showCloseButton=closeButtonForType)}else toast.showCloseButton=!1;switch(toast.showCloseButton&&(toast.closeHtml=$sce.trustAsHtml(toast.closeHtml||scope.config.closeHtml)),toast.bodyOutputType=toast.bodyOutputType||mergedConfig["body-output-type"],toast.bodyOutputType){case"trustedHtml":toast.html=$sce.trustAsHtml(toast.body);break;case"template":toast.bodyTemplate=toast.body||mergedConfig["body-template"];break;case"templateWithData":var fcGet=$parse(toast.body||mergedConfig["body-template"]),templateWithData=fcGet(scope);toast.bodyTemplate=templateWithData.template,toast.data=templateWithData.data;break;case"directive":toast.html=toast.body}scope.configureTimer(toast),mergedConfig["newest-on-top"]===!0?(scope.toasters.unshift(toast),mergedConfig.limit>0&&scope.toasters.length>mergedConfig.limit&&scope.toasters.pop()):(scope.toasters.push(toast),mergedConfig.limit>0&&scope.toasters.length>mergedConfig.limit&&scope.toasters.shift())}function removeToast(toastIndex){var toast=scope.toasters[toastIndex];toast&&(toast.timeoutPromise&&$interval.cancel(toast.timeoutPromise),scope.toasters.splice(toastIndex,1),angular.isFunction(toast.onHideCallback)&&toast.onHideCallback())}function removeAllToasts(toastId){for(var i=scope.toasters.length-1;i>=0;i--)isUndefinedOrNull(toastId)?removeToast(i):scope.toasters[i].uid==toastId&&removeToast(i)}function isUndefinedOrNull(val){return angular.isUndefined(val)||null===val}var mergedConfig,id=0;mergedConfig=angular.extend({},toasterConfig,scope.$eval(attrs.toasterOptions)),scope.config={toasterId:mergedConfig["toaster-id"],position:mergedConfig["position-class"],title:mergedConfig["title-class"],message:mergedConfig["message-class"],tap:mergedConfig["tap-to-dismiss"],closeButton:mergedConfig["close-button"],closeHtml:mergedConfig["close-html"],animation:mergedConfig["animation-class"],mouseoverTimer:mergedConfig["mouseover-timer-stop"]},scope.$on("$destroy",function(){toasterEventRegistry.unsubscribeToNewToastEvent(scope._onNewToast),toasterEventRegistry.unsubscribeToClearToastsEvent(scope._onClearToasts)}),scope.configureTimer=function(toast){var timeout=angular.isNumber(toast.timeout)?toast.timeout:mergedConfig["time-out"];"object"==typeof timeout&&(timeout=timeout[toast.type]),timeout>0&&setTimeout(toast,timeout)},scope.removeToast=function(id){var i,len;for(i=0,len=scope.toasters.length;i<len;i++)if(scope.toasters[i].id===id){removeToast(i);break}},scope.toasters=[],scope._onNewToast=function(event,toasterId,toastId){(isUndefinedOrNull(scope.config.toasterId)&&isUndefinedOrNull(toasterId)||!isUndefinedOrNull(scope.config.toasterId)&&!isUndefinedOrNull(toasterId)&&scope.config.toasterId==toasterId)&&addToast(toaster.toast,toastId)},scope._onClearToasts=function(event,toasterId,toastId){("*"==toasterId||isUndefinedOrNull(scope.config.toasterId)&&isUndefinedOrNull(toasterId)||!isUndefinedOrNull(scope.config.toasterId)&&!isUndefinedOrNull(toasterId)&&scope.config.toasterId==toasterId)&&removeAllToasts(toastId)},toasterEventRegistry.setup(),toasterEventRegistry.subscribeToNewToastEvent(scope._onNewToast),toasterEventRegistry.subscribeToClearToastsEvent(scope._onClearToasts)},controller:["$scope","$element","$attrs",function($scope,$element,$attrs){$scope.stopTimer=function(toast){$scope.config.mouseoverTimer===!0&&toast.timeoutPromise&&($interval.cancel(toast.timeoutPromise),toast.timeoutPromise=null)},$scope.restartTimer=function(toast){$scope.config.mouseoverTimer===!0?toast.timeoutPromise||$scope.configureTimer(toast):null===toast.timeoutPromise&&$scope.removeToast(toast.id)},$scope.click=function(toast,isCloseButton){if($scope.config.tap===!0||toast.showCloseButton===!0&&isCloseButton===!0){var removeToast=!0;toast.clickHandler&&(angular.isFunction(toast.clickHandler)?removeToast=toast.clickHandler(toast,isCloseButton):angular.isFunction($scope.$parent.$eval(toast.clickHandler))?removeToast=$scope.$parent.$eval(toast.clickHandler)(toast,isCloseButton):console.log("TOAST-NOTE: Your click handler is not inside a parent scope of toaster-container.")),removeToast&&$scope.removeToast(toast.id)}}}],template:'<div id="toast-container" ng-class="[config.position, config.animation]"><div ng-repeat="toaster in toasters" class="toast" ng-class="toaster.type" ng-click="click(toaster)" ng-mouseover="stopTimer(toaster)" ng-mouseout="restartTimer(toaster)"><div ng-if="toaster.showCloseButton" ng-click="click(toaster, true)" ng-bind-html="toaster.closeHtml"></div><div ng-class="config.title">{{toaster.title}}</div><div ng-class="config.message" ng-switch on="toaster.bodyOutputType"><div ng-switch-when="trustedHtml" ng-bind-html="toaster.html"></div><div ng-switch-when="template"><div ng-include="toaster.bodyTemplate"></div></div><div ng-switch-when="templateWithData"><div ng-include="toaster.bodyTemplate"></div></div><div ng-switch-when="directive"><div directive-template directive-name="{{toaster.html}}" directive-data="{{toaster.directiveData}}"></div></div><div ng-switch-default >{{toaster.body}}</div></div></div></div>'}}])}(window,document),!function(window,angular,undefined){"use strict";angular.module("angulartics.google.analytics",["angulartics"]).config(["$analyticsProvider",function($analyticsProvider){function dimensionsAndMetrics(properties){if(window.ga){for(var customData={},idx=1;idx<=200;idx++)"undefined"!=typeof properties["dimension"+idx]&&(customData["dimension"+idx]=properties["dimension"+idx]),"undefined"!=typeof properties["metric"+idx]&&(customData["metric"+idx]=properties["metric"+idx]);return customData}}function eventTrack(action,properties){if(!$analyticsProvider.settings.ga.disableEventTracking){if(properties&&properties.category||(properties=properties||{},properties.category="Event"),properties.value){var parsed=parseInt(properties.value,10);properties.value=isNaN(parsed)?0:parsed}if(properties.hitCallback&&"function"!=typeof properties.hitCallback&&(properties.hitCallback=null),properties.hasOwnProperty("nonInteraction")||(properties.nonInteraction=properties.noninteraction),window.ga){var eventOptions={eventCategory:properties.category,eventAction:action,eventLabel:properties.label,eventValue:properties.value,nonInteraction:properties.nonInteraction,page:properties.page||window.location.hash.substring(1)||window.location.pathname,userId:$analyticsProvider.settings.ga.userId,hitCallback:properties.hitCallback},dimsAndMets=dimensionsAndMetrics(properties);angular.extend(eventOptions,dimsAndMets),$analyticsProvider.settings.ga.transport&&angular.extend(eventOptions,$analyticsProvider.settings.ga.transport),ga("send","event",eventOptions),angular.forEach($analyticsProvider.settings.ga.additionalAccountNames,function(accountName){ga(accountName+".send","event",eventOptions)})}else window._gaq&&_gaq.push(["_trackEvent",properties.category,action,properties.label,properties.value,properties.nonInteraction])}}$analyticsProvider.settings.pageTracking.trackRelativePath=!0,$analyticsProvider.settings.ga={additionalAccountNames:undefined,disableEventTracking:null,disablePageTracking:null,userId:null},$analyticsProvider.registerPageTrack(function(path){$analyticsProvider.settings.ga.disablePageTracking||(window._gaq&&(_gaq.push(["_trackPageview",path]),angular.forEach($analyticsProvider.settings.ga.additionalAccountNames,function(accountName){_gaq.push([accountName+"._trackPageview",path])})),window.ga&&($analyticsProvider.settings.ga.userId&&ga("set","userId",$analyticsProvider.settings.ga.userId),ga("send","pageview",path),angular.forEach($analyticsProvider.settings.ga.additionalAccountNames,function(accountName){ga(accountName+".send","pageview",path)})))}),$analyticsProvider.registerEventTrack(eventTrack),$analyticsProvider.registerExceptionTrack(function(error,cause){eventTrack(error.toString(),{category:"Exceptions",label:error.stack,nonInteraction:!0})}),$analyticsProvider.registerSetUsername(function(userId){$analyticsProvider.settings.ga.userId=userId}),$analyticsProvider.registerSetUserProperties(function(properties){if(properties){var dimsAndMets=dimensionsAndMetrics(properties);ga("set",dimsAndMets)}}),$analyticsProvider.registerUserTimings(function(properties){return properties&&properties.timingCategory&&properties.timingVar&&"undefined"!=typeof properties.timingValue?void(window.ga&&ga("send","timing",properties)):void console.log("Properties timingCategory, timingVar, and timingValue are required to be set.")})}])}(window,window.angular);